udemy [現役シリコンバレーエンジニアが教えるGo入門＋応用でビットコインのシストレFintechアプリの開発]

第30回　ポインタ
//codeは別ファイルにて管理（どうせあげられないし）

メモリ領域を確認するポインタ：
    & (アンパサンド)を変数につけることで、変数の値ではなく値が保存されているメモリ領域の座標を取得することができる。

    &変数名

    ex)
    import "fmt"

    n := 100
    fmt.ptintln(&n) // 0x0000000000 のようなメモリの領域の番地が表示される

メモリ領域の番地から中に保存されている値を確認する：
    * (アスタリスク)をメモリ領域の番地が入った変数につけることで、そのメモリ領域に保存されている値を取得することができる。
    このような動作を "デ リファレンス"と呼ぶ。

    ex)
    import "fmt"

	n := 100
	var p *int = &n //  *int というポインタ型の変数 p に、n の値が格納されているメモリ領域を格納

	fmt.Println(p)  // 0x0000000000 のようなメモリ領域の番地が表示される
	fmt.Println(*p)	// 100 が表示される。